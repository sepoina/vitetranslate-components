{"version":3,"file":"index.js","sources":["../src/components/TranslateContext.jsx","../src/components/TranslateContainer.jsx","../src/components/Translate.jsx","../src/dev/babel/getChildrenText.js","../src/dev/babel/getVariableProps.js","../../../node_modules/fnv1a/index.js","../src/dev/babel/babelTranslate.js","../src/dev/rollup/rollupTranslate.js"],"sourcesContent":["import { createContext } from \"react\";\nexport const TranslateContext = createContext(null);","import React from \"react\";\r\nimport { TranslateContext } from \"./TranslateContext\";\r\n\r\nconst last = { langID: null };\r\n\r\nexport default function TranslateContainer({ predefined, children }) {\r\n  const [langID, setLangID] = React.useState(predefined);\r\n  const [langOBJ, setLangOBJ] = React.useState(null);\r\n\r\n  const handleChangeLanguage = newLanguage => {\r\n    setLangID(newLanguage);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (!langID) return;\r\n    if (last.langID === langID) return; // già in caricamento\r\n    last.langID = langID;\r\n\r\n    // declare the async data fetching function\r\n    const fetchData = async () => {\r\n      try {\r\n        // get the data from the api\r\n        // console.log(\"Carico:\", langID);\r\n        const response = await fetch(`./locale/${langID}.json`);\r\n        // convert the data to json\r\n        const json = await response.json();\r\n        // set state with the result\r\n        // console.log(\"Fatto.\");\r\n        setLangOBJ({\r\n          id: langID,\r\n          table: json,\r\n          setNewLanguage: handleChangeLanguage,\r\n        });\r\n      } catch (error) {\r\n        console.log(`Errore nel file locale/${langID}.json `);\r\n        setLangID(predefined);\r\n        return;\r\n      }\r\n    };\r\n\r\n    // call the function\r\n    fetchData()\r\n      // make sure to catch any error\r\n      .catch(console.error);\r\n  }, [langID]);\r\n\r\n  return (\r\n    <TranslateContext.Provider value={langOBJ}>\r\n      {children}\r\n    </TranslateContext.Provider>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from \"react\";\r\nimport { useContext, useMemo } from \"react\";\r\nimport { TranslateContext } from \"./TranslateContext\";\r\n/**\r\n * t -> testo da mostrare\r\n * a -> array di campi che iniettano il testo da mostrare \r\n * c -> testo da costante javascript iniettata \r\n * children -> eventuali figli\r\n */\r\nexport default function Translate({ 'data-translate': dataTranslate, t, c, a, children }) {\r\n    const lang = useContext(TranslateContext);\r\n    //\r\n    // evita il rendering se non cambia lingua o array di dati\r\n    return useMemo(() => {\r\n        let inputString = c || t || children;\r\n        // console.log(\"rerender:\", inputString);\r\n        //\r\n        // non c'è dataTranslate, può essere che sia inlinea, se lo è è nel parametro c\r\n        if (!dataTranslate) {\r\n            const matches = inputString.match(/_<_(.*?)_\\/_(.*?)_>_/);\r\n            if (matches) {\r\n                dataTranslate = matches[1]; // Contenuto tra \"_<_\" e \"_/_\"\r\n                inputString = matches[2]; // Contenuto tra \"_/_\" e \"_>_\"\r\n            }\r\n            else {\r\n                throw \"errore nel servizio di traduzione, manca translate\";\r\n            }\r\n        }\r\n        //\r\n        // c'è traduzione\r\n        if (lang?.table?.[dataTranslate]) return (\r\n            <span data-from-translate={dataTranslate}>\r\n                {a ? sostitui(lang.table[dataTranslate], a) : lang.table[dataTranslate]}\r\n            </span>\r\n        )\r\n        //\r\n        // non c'è traduzione\r\n        return (\r\n            <span data-not-translate={dataTranslate}>\r\n                {a ? sostitui(inputString, a) : inputString}\r\n            </span>\r\n        )\r\n    }, [lang,a]); // solo il cambio di lingua e di array obbliga il re-rendering \r\n}\r\n\r\n//\r\n// filla le variabili nel template\r\n//     es: text='Siamo al:%0/%1' e ['20%','100%']\r\n//              'Siamo al:%0' e '20%'\r\n//\r\nfunction sostitui(text, args) {\r\n    // se non ci sono argomenti torna sè stesso \r\n    if (args === undefined) return text;\r\n    // definisce il contenitore\r\n    const list = Array.isArray(args) ? args : [args]; // se args[0] è un array è lui la lista sennò lo mette in un array monoelemento   \r\n\r\n    let counter = 0;\r\n    const replacedString = text.replace(/%s/g, () => list[counter++]);\r\n    return replacedString;\r\n    /*\r\n    // log(text, args);\r\n    // https://stackoverflow.com/questions/610406/javascript-equivalent-to-printf-string-format#\r\n    // var args = Array.prototype.slice.call(arguments, 1);\r\n    return text.replace(/%(\\d+)/g, function (match, number) {\r\n        return typeof list[number] != 'undefined'\r\n            ? list[number]\r\n            : match\r\n            ;\r\n    });*/\r\n}","//\n// restituisce il testo di un children\n// o false se non è un testo recuperabile\n//\nexport default function getChildrenText(p) {\n  // console.log('Carico dai children:', p);\n  if (p?.container?.children?.length === 1) {\n    const child = p.container.children[0];\n    // se è un testo ok\n    if (child.type === \"JSXText\") return child.value;\n    // se è un calcolo ok se calcolabile subito\n    else if (\n      child.type === \"JSXExpressionContainer\" &&\n      child?.expression?.value\n    )\n      return child.expression.value;\n    else return false;\n  }\n  // altrimenti è un errore\n  return false;\n}\n","//\n// prende la variabile 'variableName' se esiste tra i props o torna false\nexport default function getVariableProps(variableName, p) {\n  // console.log('Carico dalle variabili in linea:', p);\n  const node = p.node.attributes.find(\n    node => node?.name?.name === variableName\n  );\n  if (!node) return false;\n  // ok è una stringa\n  if (node?.value?.type === \"StringLiteral\") return node.value.value;\n  // o è calcolabile come stringa\n  if (\n    node?.value?.type === \"JSXExpressionContainer\" &&\n    node?.value?.expression?.type === \"StringLiteral\"\n  )\n    return node.value.expression.value;\n  return false;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * FNV-1a hash generation init value.\n * It's exposed, because this allows user to override it.\n * More info: https://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function#FNV_hash_parameters\n *\n * @type {number}\n */\nhash.BASE = 0x811c9dc5;\n/**\n * Generates 32 bit FNV-1a hash from the given string.\n * As explained here: http://isthe.com/chongo/tech/comp/fnv/\n *\n * @param s {string} String to generate hash from.\n * @param [h] {number} FNV-1a hash generation init value.\n * @returns {number} The result integer hash.\n */\nfunction hash(s, h = hash.BASE) {\n    const l = s.length;\n    for (let i = 0; i < l; i++) {\n        h ^= s.charCodeAt(i);\n        h += (h << 1) + (h << 4) + (h << 7) + (h << 8) + (h << 24);\n    }\n    return h >>> 0;\n}\nexports.default = hash;\nmodule.exports = hash;\n","import getChildrenText from \"./getChildrenText\";\nimport getVariableProps from \"./getVariableProps\";\nimport pathCmd from \"path\";\nimport hash from \"fnv1a\";\n\n//\n// se in input trova un _%_testo_%_\n// aggiunge \"testo\" alla tabella di traduzioni\n// e trasforma \"_%_testo_%_\" in \"_<_id_#_testo_>_\"\n//\nfunction ifStaticAddTable(p, state) {\n  if (!p?.node?.value) return; // non trova l'oggetto\n  if (!/_%_(.*?)_%_/.test(p.node.value)) return; // non trova il riconoscitore\n  const strToAdd = /_%_(.*?)_%_/.exec(p.node.value)?.[1];\n  if (!strToAdd) return; // è vuota o nulla\n  //  console.log(\"trovato da rimpiazzare:\", p.node.value);\n  const data_translate = addToTable(strToAdd, state);\n  p.node.value = getReplacedForTranslate(\n    p.node.value,\n    data_translate,\n    strToAdd\n  );\n  if (p.node.extra.rawValue)\n    p.node.extra.rawValue = getReplacedForTranslate(\n      p.node.extra.rawValue,\n      data_translate,\n      strToAdd\n    );\n  if (p.node.extra.raw)\n    p.node.extra.raw = getReplacedForTranslate(\n      p.node.extra.raw,\n      data_translate,\n      strToAdd\n    );\n  // console.log(\"rimpiazzo:\", p.node.value);\n}\n\n// getta il testo da value e trasforma \"_%_testo_%_\" in \"_<_id_/_testo_>_\"\nfunction getReplacedForTranslate(value, data_translate, text) {\n  const newString = `_<_${data_translate}_/_${text}_>_`;\n  return value.replace(/_%_(.*?)_%_/, newString);\n}\n\nfunction addToTable(strToAdd, state) {\n  //\n  //\n  // recupera il nome del file su cui si trova il translate\n  const nameFile = pathCmd.parse(state.filename).name;\n  //\n  //\n  // calcola l'hash\n  const hex = hash(strToAdd).toString(36);\n  //\n  // va iniettato\n  // console.log(path);\n  const data_translate = `${nameFile}_${hex}`;\n  // console.log(`add to table:${data_translate} value:${strToAdd}`);\n  // assegna\n  globalThis[\"TranslateService\"][\"baseLng\"][data_translate] = strToAdd;\n  return data_translate; // id\n}\n\nexport default api => {\n  const { types: t } = api;\n\n  return {\n    visitor: {\n      // Aggiungi il tuo visitor per le stringhe costanti\n      StringLiteral: ifStaticAddTable,\n      JSXText: ifStaticAddTable,\n      TemplateElement: ifStaticAddTable,\n      JSXOpeningElement(path, state) {\n        //\n        // prova ad aprirlo... è translate? se no torna\n        if (path.node.name.name !== \"Translate\") return;\n        //\n        // ha giù la props data-translate? torna\n        const existingProp = path.node.attributes.find(\n          node => node?.name?.name === \"data-translate\"\n        );\n        if (existingProp) return;\n        //\n        // se contiene c come props la traduzione è differita, ritorna\n        //\n        if (path.node.attributes.find(n => n?.name.name === \"c\")) return;\n        //\n        // se ha un props chiamato 't' lo carica altrimenti carica il contenuto\n        // dei children, se nessuno dei due ha un text mostra un errore\n        const textInternal = path.node.attributes.find(\n          node => node?.name?.name === \"t\"\n        );\n        const text = textInternal\n          ? getVariableProps(\"t\", path)\n          : getChildrenText(path);\n        if (text === false)\n          throw \"Errore, Translate deve contenere solo stringhe\";\n        //\n        // aggiunge alla tabella\n        const data_translate = addToTable(text, state);\n        const newProp = t.jSXAttribute(\n          t.jSXIdentifier(\"data-translate\"),\n          t.stringLiteral(data_translate)\n        );\n        path.node.attributes.push(newProp);\n      },\n    },\n  };\n};\n","import fs from \"fs\";\n\nexport default function rollupTranslate(defs) {\n  return {\n    name: \"onRollupTranslate\",\n    buildStart: {\n      sequential: true,\n      order: \"pre\",\n      handler: () => {\n        //\n        // la public dir è di solito {workspace}/public\n        //\n        globalThis[\"TranslateService\"] = defs;\n        globalThis[\"TranslateService\"].baseLng = {\n          __lngVersion__: CalcolaVersion(),\n        }; // spazio vuoto per gli elementi\n        console.log(\"Preparo il servizio traduzioni.\");\n      },\n    },\n    buildEnd: {\n      sequential: true,\n      order: \"post\",\n      handler: () => {\n        updateFileLanguage();\n      },\n    },\n  };\n}\n\n/**\n * Aggiorna un file di lingua JSON con dati di traduzione. Se il file non esiste, crea un nuovo file\n * utilizzando i dati di traduzione di base forniti. La funzione confronta e aggiorna i dati presenti\n * nel file con i nuovi dati di traduzione, salvando le modifiche solo se sono state apportate variazioni.\n *\n * @function\n * @returns {void}\n *\n * @description\n * Questa funzione legge il contenuto di un file JSON di lingua e lo confronta con i dati di traduzione\n * di base forniti. Se il file non esiste, viene creato utilizzando i dati di traduzione di base. Se ci\n * sono variazioni nei dati di traduzione, le modifiche vengono salvate nel file. La funzione fornisce\n * messaggi di log dettagliati durante il processo.\n *\n */\nfunction updateFileLanguage() {\n  // Specifica il percorso del tuo file JSON\n  const filePath = globalThis[\"TranslateService\"].file;\n  const distPath = globalThis[\"TranslateService\"].dist;\n  console.log(\"TRANSLATE ---------------------------------------------\");\n  console.log(\"Carico traduzione base.\");\n  try {\n    fs.readFile(filePath, \"utf8\", (err, data) => {\n      let state = { newest: true, changed: true },\n        baseData = null;\n      if (err) {\n        console.log(`Non esiste ancora il file ${filePath}, tento di crearlo`);\n        baseData = globalThis[\"TranslateService\"].baseLng; // questi i dati\n      } else {\n        baseData = JSON.parse(data);\n        const newData = globalThis[\"TranslateService\"].baseLng;\n        state = decade(baseData, newData); // se ci sono variazioni\n      }\n      if (state.changed) {\n        // sono avvenute variazioni, salva\n        const stats = state.newest\n          ? \"Nuovo file,\"\n          : `(${state.added} agginte, ${state.deleted} rimosse)`;\n        console.log(`Update avvenuto: ${stats} salvo.`);\n        fs.writeFile(\n          filePath,\n          JSON.stringify(baseData, null, 2),\n          \"utf8\",\n          err => {\n            if (err) {\n              console.error(`Errore durante la scrittura su ${filePath}`, err);\n            } else {\n              console.log(`Dati scritti con successo su ${filePath}`);\n              fs.copyFile(filePath, distPath, err => {\n                if (!err) console.log(`Copiato con successo su ${distPath}`);\n                console.log(\n                  \"END TRANSLATE ---------------------------------------------\"\n                );\n              });\n            }\n          }\n        );\n      } else {\n        console.log(\"Nessun cambiamento.\");\n        console.log(\n          \"END TRANSLATE ---------------------------------------------\"\n        );\n      }\n    });\n  } catch (error) {\n    console.error(`Errore l'elaborazione di ${filePath}, cancellalo`, error);\n    return;\n  }\n}\n\n/**\n * Funzione per confrontare due oggetti e apportare modifiche.\n *\n * @param {Object} a - Primo oggetto da confrontare e modificare.\n * @param {Object} b - Secondo oggetto per il confronto.\n * @returns {boolean} Restituisce true se ci sono state modifiche, altrimenti false.\n *\n * @example\n * const oggettoA = { \"App_f9xds4\": \"rob\", \"App_y3mo81\": \"Santanastaso\" };\n * const oggettoB = { \"App_f9xds4\": \"rob\", \"App_y3mo81\": \"Santanastaso\", \"NuovaChiave\": \"NuovoValore\" };\n * const ciSonoVariazioni = decade(oggettoA, oggettoB);\n * console.log(oggettoA); // { \"App_f9xds4\": \"rob\", \"App_y3mo81\": \"Santanastaso\", \"NuovaChiave\": \"NuovoValore\" }\n * console.log('Ci sono variazioni:', ciSonoVariazioni); // Ci sono variazioni: true\n */\nfunction decade(a, b) {\n  const stats = { changed: false, deleted: 0, added: 0 };\n  // Rimuovi le chiavi da 'a' che non sono presenti in 'b'\n  for (const keyA in a) {\n    if (!(keyA in b)) {\n      delete a[keyA];\n      stats.changed = true;\n      stats.deleted += 1;\n    }\n  }\n  // Aggiungi le chiavi da 'b' che non sono presenti in 'a'\n  for (const keyB in b) {\n    if (!(keyB in a)) {\n      a[keyB] = b[keyB];\n      stats.changed = true;\n      stats.added += 1;\n    }\n  }\n  if (stats.changed) a[\"__lngVersion__\"] = b[\"__lngVersion__\"]; // riporta in a la versione corrente\n  return stats;\n}\n\nfunction CalcolaVersion() {\n  return Date.now();\n}\n"],"names":["TranslateContext","createContext","last","TranslateContainer","predefined","children","langID","setLangID","React","langOBJ","setLangOBJ","handleChangeLanguage","newLanguage","json","Translate","dataTranslate","t","c","a","lang","useContext","useMemo","inputString","matches","_a","sostitui","text","args","list","counter","getChildrenText","p","_b","child","_c","getVariableProps","variableName","node","_d","exports","hash","s","h","l","i","module","ifStaticAddTable","state","strToAdd","data_translate","addToTable","getReplacedForTranslate","value","newString","nameFile","pathCmd","hex","babelTranslate","api","path","n","newProp","rollupTranslate","defs","CalcolaVersion","updateFileLanguage","filePath","distPath","fs","err","data","baseData","newData","decade","stats","error","b","keyA","keyB"],"mappings":"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","x_google_ignoreList":[5]}