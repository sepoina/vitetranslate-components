{"version":3,"file":"index.umd.cjs","sources":["../src/components/TranslateContext.jsx","../src/components/TranslateContainer.jsx","../src/components/Translate.jsx","../src/dev/babel/getChildrenText.js","../src/dev/babel/getVariableProps.js","../../../node_modules/fnv1a/index.js","../src/dev/babel/babelTranslate.js","../src/dev/rollup/rollupTranslate.js"],"sourcesContent":["import { createContext } from \"react\";\nexport const TranslateContext = createContext(null);","import React from \"react\";\r\nimport { TranslateContext } from \"./TranslateContext\";\r\n\r\nconst last = { langID: null };\r\n\r\nexport default function TranslateContainer({ predefined, children }) {\r\n  const [langID, setLangID] = React.useState(predefined);\r\n  const [langOBJ, setLangOBJ] = React.useState(null);\r\n\r\n  const handleChangeLanguage = newLanguage => {\r\n    setLangID(newLanguage);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (!langID) return;\r\n    if (last.langID === langID) return; // già in caricamento\r\n    last.langID = langID;\r\n\r\n    // declare the async data fetching function\r\n    const fetchData = async () => {\r\n      try {\r\n        // get the data from the api\r\n        // console.log(\"Carico:\", langID);\r\n        const response = await fetch(`./locale/${langID}.json`);\r\n        // convert the data to json\r\n        const json = await response.json();\r\n        // set state with the result\r\n        // console.log(\"Fatto.\");\r\n        setLangOBJ({\r\n          id: langID,\r\n          table: json,\r\n          setNewLanguage: handleChangeLanguage,\r\n        });\r\n      } catch (error) {\r\n        console.log(`Errore nel file locale/${langID}.json `);\r\n        setLangID(predefined);\r\n        return;\r\n      }\r\n    };\r\n\r\n    // call the function\r\n    fetchData()\r\n      // make sure to catch any error\r\n      .catch(console.error);\r\n  }, [langID]);\r\n\r\n  return (\r\n    <TranslateContext.Provider value={langOBJ}>\r\n      {children}\r\n    </TranslateContext.Provider>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from \"react\";\r\nimport { useContext, useMemo } from \"react\";\r\nimport { TranslateContext } from \"./TranslateContext\";\r\n/**\r\n * t -> testo da mostrare\r\n * a -> array di campi che iniettano il testo da mostrare \r\n * c -> testo da costante javascript iniettata \r\n * children -> eventuali figli\r\n */\r\nexport default function Translate({ 'data-translate': dataTranslate, t, c, a, children }) {\r\n    const lang = useContext(TranslateContext);\r\n    //\r\n    // evita il rendering se non cambia lingua o array di dati\r\n    return useMemo(() => {\r\n        let inputString = c || t || children;\r\n        // console.log(\"rerender:\", inputString);\r\n        //\r\n        // non c'è dataTranslate, può essere che sia inlinea, se lo è è nel parametro c\r\n        if (!dataTranslate) {\r\n            const matches = inputString.match(/_<_(.*?)_\\/_(.*?)_>_/);\r\n            if (matches) {\r\n                dataTranslate = matches[1]; // Contenuto tra \"_<_\" e \"_/_\"\r\n                inputString = matches[2]; // Contenuto tra \"_/_\" e \"_>_\"\r\n            }\r\n            else {\r\n                throw \"errore nel servizio di traduzione, manca translate\";\r\n            }\r\n        }\r\n        //\r\n        // c'è traduzione\r\n        if (lang?.table?.[dataTranslate]) return (\r\n            <span data-from-translate={dataTranslate}>\r\n                {a ? sostitui(lang.table[dataTranslate], a) : lang.table[dataTranslate]}\r\n            </span>\r\n        )\r\n        //\r\n        // non c'è traduzione\r\n        return (\r\n            <span data-not-translate={dataTranslate}>\r\n                {a ? sostitui(inputString, a) : inputString}\r\n            </span>\r\n        )\r\n    }, [lang,a]); // solo il cambio di lingua e di array obbliga il re-rendering \r\n}\r\n\r\n//\r\n// filla le variabili nel template\r\n//     es: text='Siamo al:%0/%1' e ['20%','100%']\r\n//              'Siamo al:%0' e '20%'\r\n//\r\nfunction sostitui(text, args) {\r\n    // se non ci sono argomenti torna sè stesso \r\n    if (args === undefined) return text;\r\n    // definisce il contenitore\r\n    const list = Array.isArray(args) ? args : [args]; // se args[0] è un array è lui la lista sennò lo mette in un array monoelemento   \r\n\r\n    let counter = 0;\r\n    const replacedString = text.replace(/%s/g, () => list[counter++]);\r\n    return replacedString;\r\n    /*\r\n    // log(text, args);\r\n    // https://stackoverflow.com/questions/610406/javascript-equivalent-to-printf-string-format#\r\n    // var args = Array.prototype.slice.call(arguments, 1);\r\n    return text.replace(/%(\\d+)/g, function (match, number) {\r\n        return typeof list[number] != 'undefined'\r\n            ? list[number]\r\n            : match\r\n            ;\r\n    });*/\r\n}","//\n// restituisce il testo di un children\n// o false se non è un testo recuperabile\n//\nexport default function getChildrenText(p) {\n  // console.log('Carico dai children:', p);\n  if (p?.container?.children?.length === 1) {\n    const child = p.container.children[0];\n    // se è un testo ok\n    if (child.type === \"JSXText\") return child.value;\n    // se è un calcolo ok se calcolabile subito\n    else if (\n      child.type === \"JSXExpressionContainer\" &&\n      child?.expression?.value\n    )\n      return child.expression.value;\n    else return false;\n  }\n  // altrimenti è un errore\n  return false;\n}\n","//\n// prende la variabile 'variableName' se esiste tra i props o torna false\nexport default function getVariableProps(variableName, p) {\n  // console.log('Carico dalle variabili in linea:', p);\n  const node = p.node.attributes.find(\n    node => node?.name?.name === variableName\n  );\n  if (!node) return false;\n  // ok è una stringa\n  if (node?.value?.type === \"StringLiteral\") return node.value.value;\n  // o è calcolabile come stringa\n  if (\n    node?.value?.type === \"JSXExpressionContainer\" &&\n    node?.value?.expression?.type === \"StringLiteral\"\n  )\n    return node.value.expression.value;\n  return false;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * FNV-1a hash generation init value.\n * It's exposed, because this allows user to override it.\n * More info: https://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function#FNV_hash_parameters\n *\n * @type {number}\n */\nhash.BASE = 0x811c9dc5;\n/**\n * Generates 32 bit FNV-1a hash from the given string.\n * As explained here: http://isthe.com/chongo/tech/comp/fnv/\n *\n * @param s {string} String to generate hash from.\n * @param [h] {number} FNV-1a hash generation init value.\n * @returns {number} The result integer hash.\n */\nfunction hash(s, h = hash.BASE) {\n    const l = s.length;\n    for (let i = 0; i < l; i++) {\n        h ^= s.charCodeAt(i);\n        h += (h << 1) + (h << 4) + (h << 7) + (h << 8) + (h << 24);\n    }\n    return h >>> 0;\n}\nexports.default = hash;\nmodule.exports = hash;\n","import getChildrenText from \"./getChildrenText\";\nimport getVariableProps from \"./getVariableProps\";\nimport pathCmd from \"path\";\nimport hash from \"fnv1a\";\n\n//\n// se in input trova un _%_testo_%_\n// aggiunge \"testo\" alla tabella di traduzioni\n// e trasforma \"_%_testo_%_\" in \"_<_id_#_testo_>_\"\n//\nfunction ifStaticAddTable(p, state) {\n  if (!p?.node?.value) return; // non trova l'oggetto\n  if (!/_%_(.*?)_%_/.test(p.node.value)) return; // non trova il riconoscitore\n  const strToAdd = /_%_(.*?)_%_/.exec(p.node.value)?.[1];\n  if (!strToAdd) return; // è vuota o nulla\n  //  console.log(\"trovato da rimpiazzare:\", p.node.value);\n  const data_translate = addToTable(strToAdd, state);\n  p.node.value = getReplacedForTranslate(\n    p.node.value,\n    data_translate,\n    strToAdd\n  );\n  if (p.node.extra.rawValue)\n    p.node.extra.rawValue = getReplacedForTranslate(\n      p.node.extra.rawValue,\n      data_translate,\n      strToAdd\n    );\n  if (p.node.extra.raw)\n    p.node.extra.raw = getReplacedForTranslate(\n      p.node.extra.raw,\n      data_translate,\n      strToAdd\n    );\n  // console.log(\"rimpiazzo:\", p.node.value);\n}\n\n// getta il testo da value e trasforma \"_%_testo_%_\" in \"_<_id_/_testo_>_\"\nfunction getReplacedForTranslate(value, data_translate, text) {\n  const newString = `_<_${data_translate}_/_${text}_>_`;\n  return value.replace(/_%_(.*?)_%_/, newString);\n}\n\nfunction addToTable(strToAdd, state) {\n  //\n  //\n  // recupera il nome del file su cui si trova il translate\n  const nameFile = pathCmd.parse(state.filename).name;\n  //\n  //\n  // calcola l'hash\n  const hex = hash(strToAdd).toString(36);\n  //\n  // va iniettato\n  // console.log(path);\n  const data_translate = `${nameFile}_${hex}`;\n  // console.log(`add to table:${data_translate} value:${strToAdd}`);\n  // assegna\n  globalThis[\"TranslateService\"][\"baseLng\"][data_translate] = strToAdd;\n  return data_translate; // id\n}\n\nexport default api => {\n  const { types: t } = api;\n\n  return {\n    visitor: {\n      // Aggiungi il tuo visitor per le stringhe costanti\n      StringLiteral: ifStaticAddTable,\n      JSXText: ifStaticAddTable,\n      TemplateElement: ifStaticAddTable,\n      JSXOpeningElement(path, state) {\n        //\n        // prova ad aprirlo... è translate? se no torna\n        if (path.node.name.name !== \"Translate\") return;\n        //\n        // ha giù la props data-translate? torna\n        const existingProp = path.node.attributes.find(\n          node => node?.name?.name === \"data-translate\"\n        );\n        if (existingProp) return;\n        //\n        // se contiene c come props la traduzione è differita, ritorna\n        //\n        if (path.node.attributes.find(n => n?.name.name === \"c\")) return;\n        //\n        // se ha un props chiamato 't' lo carica altrimenti carica il contenuto\n        // dei children, se nessuno dei due ha un text mostra un errore\n        const textInternal = path.node.attributes.find(\n          node => node?.name?.name === \"t\"\n        );\n        const text = textInternal\n          ? getVariableProps(\"t\", path)\n          : getChildrenText(path);\n        if (text === false)\n          throw \"Errore, Translate deve contenere solo stringhe\";\n        //\n        // aggiunge alla tabella\n        const data_translate = addToTable(text, state);\n        const newProp = t.jSXAttribute(\n          t.jSXIdentifier(\"data-translate\"),\n          t.stringLiteral(data_translate)\n        );\n        path.node.attributes.push(newProp);\n      },\n    },\n  };\n};\n","import fs from \"fs\";\n\nexport default function rollupTranslate(defs) {\n  return {\n    name: \"onRollupTranslate\",\n    buildStart: {\n      sequential: true,\n      order: \"pre\",\n      handler: () => {\n        //\n        // la public dir è di solito {workspace}/public\n        //\n        globalThis[\"TranslateService\"] = defs;\n        globalThis[\"TranslateService\"].baseLng = {\n          __lngVersion__: CalcolaVersion(),\n        }; // spazio vuoto per gli elementi\n        console.log(\"Preparo il servizio traduzioni.\");\n      },\n    },\n    buildEnd: {\n      sequential: true,\n      order: \"post\",\n      handler: () => {\n        updateFileLanguage();\n      },\n    },\n  };\n}\n\n/**\n * Aggiorna un file di lingua JSON con dati di traduzione. Se il file non esiste, crea un nuovo file\n * utilizzando i dati di traduzione di base forniti. La funzione confronta e aggiorna i dati presenti\n * nel file con i nuovi dati di traduzione, salvando le modifiche solo se sono state apportate variazioni.\n *\n * @function\n * @returns {void}\n *\n * @description\n * Questa funzione legge il contenuto di un file JSON di lingua e lo confronta con i dati di traduzione\n * di base forniti. Se il file non esiste, viene creato utilizzando i dati di traduzione di base. Se ci\n * sono variazioni nei dati di traduzione, le modifiche vengono salvate nel file. La funzione fornisce\n * messaggi di log dettagliati durante il processo.\n *\n */\nfunction updateFileLanguage() {\n  // Specifica il percorso del tuo file JSON\n  const filePath = globalThis[\"TranslateService\"].file;\n  const distPath = globalThis[\"TranslateService\"].dist;\n  console.log(\"TRANSLATE ---------------------------------------------\");\n  console.log(\"Carico traduzione base.\");\n  try {\n    fs.readFile(filePath, \"utf8\", (err, data) => {\n      let state = { newest: true, changed: true },\n        baseData = null;\n      if (err) {\n        console.log(`Non esiste ancora il file ${filePath}, tento di crearlo`);\n        baseData = globalThis[\"TranslateService\"].baseLng; // questi i dati\n      } else {\n        baseData = JSON.parse(data);\n        const newData = globalThis[\"TranslateService\"].baseLng;\n        state = decade(baseData, newData); // se ci sono variazioni\n      }\n      if (state.changed) {\n        // sono avvenute variazioni, salva\n        const stats = state.newest\n          ? \"Nuovo file,\"\n          : `(${state.added} agginte, ${state.deleted} rimosse)`;\n        console.log(`Update avvenuto: ${stats} salvo.`);\n        fs.writeFile(\n          filePath,\n          JSON.stringify(baseData, null, 2),\n          \"utf8\",\n          err => {\n            if (err) {\n              console.error(`Errore durante la scrittura su ${filePath}`, err);\n            } else {\n              console.log(`Dati scritti con successo su ${filePath}`);\n              fs.copyFile(filePath, distPath, err => {\n                if (!err) console.log(`Copiato con successo su ${distPath}`);\n                console.log(\n                  \"END TRANSLATE ---------------------------------------------\"\n                );\n              });\n            }\n          }\n        );\n      } else {\n        console.log(\"Nessun cambiamento.\");\n        console.log(\n          \"END TRANSLATE ---------------------------------------------\"\n        );\n      }\n    });\n  } catch (error) {\n    console.error(`Errore l'elaborazione di ${filePath}, cancellalo`, error);\n    return;\n  }\n}\n\n/**\n * Funzione per confrontare due oggetti e apportare modifiche.\n *\n * @param {Object} a - Primo oggetto da confrontare e modificare.\n * @param {Object} b - Secondo oggetto per il confronto.\n * @returns {boolean} Restituisce true se ci sono state modifiche, altrimenti false.\n *\n * @example\n * const oggettoA = { \"App_f9xds4\": \"rob\", \"App_y3mo81\": \"Santanastaso\" };\n * const oggettoB = { \"App_f9xds4\": \"rob\", \"App_y3mo81\": \"Santanastaso\", \"NuovaChiave\": \"NuovoValore\" };\n * const ciSonoVariazioni = decade(oggettoA, oggettoB);\n * console.log(oggettoA); // { \"App_f9xds4\": \"rob\", \"App_y3mo81\": \"Santanastaso\", \"NuovaChiave\": \"NuovoValore\" }\n * console.log('Ci sono variazioni:', ciSonoVariazioni); // Ci sono variazioni: true\n */\nfunction decade(a, b) {\n  const stats = { changed: false, deleted: 0, added: 0 };\n  // Rimuovi le chiavi da 'a' che non sono presenti in 'b'\n  for (const keyA in a) {\n    if (!(keyA in b)) {\n      delete a[keyA];\n      stats.changed = true;\n      stats.deleted += 1;\n    }\n  }\n  // Aggiungi le chiavi da 'b' che non sono presenti in 'a'\n  for (const keyB in b) {\n    if (!(keyB in a)) {\n      a[keyB] = b[keyB];\n      stats.changed = true;\n      stats.added += 1;\n    }\n  }\n  if (stats.changed) a[\"__lngVersion__\"] = b[\"__lngVersion__\"]; // riporta in a la versione corrente\n  return stats;\n}\n\nfunction CalcolaVersion() {\n  return Date.now();\n}\n"],"names":["TranslateContext","createContext","last","TranslateContainer","predefined","children","langID","setLangID","React","langOBJ","setLangOBJ","handleChangeLanguage","newLanguage","json","Translate","dataTranslate","t","c","a","lang","useContext","useMemo","inputString","matches","_a","sostitui","text","args","list","counter","getChildrenText","p","_b","child","_c","getVariableProps","variableName","node","_d","exports","hash","s","h","l","i","module","ifStaticAddTable","state","strToAdd","data_translate","addToTable","getReplacedForTranslate","value","newString","nameFile","pathCmd","hex","babelTranslate","api","path","n","newProp","rollupTranslate","defs","CalcolaVersion","updateFileLanguage","filePath","distPath","fs","err","data","baseData","newData","decade","stats","error","b","keyA","keyB"],"mappings":"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","x_google_ignoreList":[5]}