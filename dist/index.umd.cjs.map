{"version":3,"file":"index.umd.cjs","sources":["../src/components/TranslateContext.jsx","../src/components/TranslateContainer.jsx","../src/components/Translate.jsx"],"sourcesContent":["import { createContext } from \"react\";\nexport const TranslateContext = createContext(null);","import React from \"react\";\r\nimport { TranslateContext } from \"./TranslateContext\";\r\n\r\nconst last = { langID: null };\r\n\r\nexport default function TranslateContainer({ predefined, children }) {\r\n  const [propose, setPropose] = React.useState({ lang: predefined });\r\n  const [langOBJ, setLangOBJ] = React.useState(null);\r\n\r\n  // struttura funzione proposeNewLanguage({\r\n  //   lang:'it',\r\n  //   onStart: () => {},      // a inizio caricamento\r\n  //   onDone: (isOk) => {},   // a fine caricamento isOk - true o false\r\n  //   onError: (error) => {}, // in caso di errore, struttura error\r\n  //  })\r\n  const proposeNewLanguage = propObj => {\r\n    setPropose(propObj);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (!propose.lang) return;\r\n    if (last.langID === propose.lang) return; // già in caricamento\r\n    last.langID = propose.lang; // evita doppie interazioni\r\n    if (propose.onStart) propose.onStart(true);\r\n    // declare the async data fetching function\r\n    const fetchData = async () => {\r\n      try {\r\n        // get the data from the api\r\n        // console.log(\"Carico:\", propose.lang);\r\n        const response = await fetch(`./locale/${propose.lang}.json`);\r\n        // convert the data to json\r\n        const json = await response.json();\r\n        // set state with the result\r\n        // console.log(\"Fatto.\");\r\n        if (propose.onDone) propose.onDone(true);\r\n        setLangOBJ({\r\n          id: propose.lang,\r\n          table: json,\r\n          proposeNewLanguage: proposeNewLanguage,\r\n        });\r\n      } catch (error) {\r\n        if (propose.onError) propose.onError({error:error, inexistID:propose.lang});\r\n        else console.error(`Inexistant or error in language file ./locale/${propose.lang}.json `);\r\n        if (propose.onDone) propose.onDone(false);\r\n        // setPropose({ lang: predefined });\r\n        return;\r\n      }\r\n    };\r\n\r\n    // call the function\r\n    fetchData();\r\n  }, [propose.lang]);\r\n\r\n  return (\r\n    <TranslateContext.Provider value={langOBJ}>\r\n      {children}\r\n    </TranslateContext.Provider>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from \"react\";\r\nimport { useContext, useMemo } from \"react\";\r\nimport { TranslateContext } from \"./TranslateContext\";\r\n/**\r\n * t -> testo da mostrare\r\n * a -> array di campi che iniettano il testo da mostrare \r\n * c -> testo da costante javascript iniettata \r\n * children -> eventuali figli\r\n */\r\nexport default function Translate({ 'data-translate': dataTranslate, t, c, a, children }) {\r\n    const lang = useContext(TranslateContext);\r\n    //\r\n    // evita il rendering se non cambia lingua o array di dati\r\n    return useMemo(() => {\r\n        let inputString = c || t || children;\r\n        // console.log(\"rerender:\", inputString);\r\n        //\r\n        // non c'è dataTranslate, può essere che sia inlinea, se lo è è nel parametro c\r\n        if (!dataTranslate || (inputString.startsWith(\"_<_\") && inputString.endsWith(\"_>_\"))) {\r\n            const matches = inputString.match(/_<_(.*?)_\\/_(.*?)_>_/);\r\n            if (matches) {\r\n                dataTranslate = matches[1]; // Contenuto tra \"_<_\" e \"_/_\"\r\n                inputString = matches[2]; // Contenuto tra \"_/_\" e \"_>_\"\r\n            }\r\n            else {\r\n                throw \"errore nel servizio di traduzione, manca translate\";\r\n            }\r\n        }\r\n        //\r\n        // c'è traduzione\r\n        if (lang?.table?.[dataTranslate]) return (\r\n            <span data-from-translate={dataTranslate}>\r\n                {a ? sostitui(lang.table[dataTranslate], a) : lang.table[dataTranslate]}\r\n            </span>\r\n        )\r\n        //\r\n        // non c'è traduzione\r\n        return (\r\n            <span data-not-translate={dataTranslate}>\r\n                {a ? sostitui(inputString, a) : inputString}\r\n            </span>\r\n        )\r\n    }, [lang,a]); // solo il cambio di lingua e di array obbliga il re-rendering \r\n}\r\n\r\n//\r\n// filla le variabili nel template\r\n//     es: text='Siamo al:%0/%1' e ['20%','100%']\r\n//              'Siamo al:%0' e '20%'\r\n//\r\nfunction sostitui(text, args) {\r\n    // se non ci sono argomenti torna sè stesso \r\n    if (args === undefined) return text;\r\n    // definisce il contenitore\r\n    const list = Array.isArray(args) ? args : [args]; // se args[0] è un array è lui la lista sennò lo mette in un array monoelemento   \r\n\r\n    let counter = 0;\r\n    const replacedString = text.replace(/%s/g, () => list[counter++]);\r\n    return replacedString;\r\n    /*\r\n    // log(text, args);\r\n    // https://stackoverflow.com/questions/610406/javascript-equivalent-to-printf-string-format#\r\n    // var args = Array.prototype.slice.call(arguments, 1);\r\n    return text.replace(/%(\\d+)/g, function (match, number) {\r\n        return typeof list[number] != 'undefined'\r\n            ? list[number]\r\n            : match\r\n            ;\r\n    });*/\r\n}"],"names":["TranslateContext","createContext","last","TranslateContainer","predefined","children","propose","setPropose","React","langOBJ","setLangOBJ","proposeNewLanguage","propObj","json","error","Translate","dataTranslate","t","c","a","lang","useContext","useMemo","inputString","matches","_a","sostitui","text","args","list","counter"],"mappings":"+RACa,MAAAA,EAAmBC,gBAAc,IAAI,ECE5CC,EAAO,CAAE,OAAQ,MAEvB,SAAwBC,EAAmB,CAAE,WAAAC,EAAY,SAAAC,GAAY,CAC7D,KAAA,CAACC,EAASC,CAAU,EAAIC,EAAM,SAAS,CAAE,KAAMJ,CAAA,CAAY,EAC3D,CAACK,EAASC,CAAU,EAAIF,EAAM,SAAS,IAAI,EAQ3CG,EAAgCC,GAAA,CACpCL,EAAWK,CAAO,CAAA,EAGpB,OAAAJ,EAAM,UAAU,IAAM,CAEhB,GADA,CAACF,EAAQ,MACTJ,EAAK,SAAWI,EAAQ,KAAM,OAClCJ,EAAK,OAASI,EAAQ,KAClBA,EAAQ,SAASA,EAAQ,QAAQ,EAAI,GAEvB,SAAY,CACxB,GAAA,CAKI,MAAAO,EAAO,MAFI,MAAM,MAAM,YAAYP,EAAQ,IAAI,OAAO,GAEhC,OAGxBA,EAAQ,QAAQA,EAAQ,OAAO,EAAI,EAC5BI,EAAA,CACT,GAAIJ,EAAQ,KACZ,MAAOO,EACP,mBAAAF,CAAA,CACD,QACMG,EAAO,CACVR,EAAQ,QAASA,EAAQ,QAAQ,CAAC,MAAAQ,EAAa,UAAUR,EAAQ,KAAK,EACrE,QAAQ,MAAM,iDAAiDA,EAAQ,IAAI,QAAQ,EACpFA,EAAQ,QAAQA,EAAQ,OAAO,EAAK,EAExC,MACF,CAAA,IAIQ,EACT,CAACA,EAAQ,IAAI,CAAC,kBAGdN,EAAiB,SAAjB,CAA0B,MAAOS,GAC/BJ,CACH,CAEJ,CChDwB,SAAAU,EAAU,CAAE,iBAAkBC,EAAe,EAAAC,EAAG,EAAAC,EAAG,EAAAC,EAAG,SAAAd,GAAY,CAChF,MAAAe,EAAOC,aAAWrB,CAAgB,EAGxC,OAAOsB,UAAQ,IAAM,OACb,IAAAC,EAAcL,GAAKD,GAAKZ,EAIxB,GAAA,CAACW,GAAkBO,EAAY,WAAW,KAAK,GAAKA,EAAY,SAAS,KAAK,EAAI,CAC5E,MAAAC,EAAUD,EAAY,MAAM,sBAAsB,EACxD,GAAIC,EACAR,EAAgBQ,EAAQ,CAAC,EACzBD,EAAcC,EAAQ,CAAC,MAGjB,MAAA,oDAEd,CAGI,OAAAC,EAAAL,GAAA,YAAAA,EAAM,QAAN,MAAAK,EAAcT,GACbR,EAAA,cAAA,OAAA,CAAK,sBAAqBQ,CAAA,EACtBG,EAAIO,EAASN,EAAK,MAAMJ,CAAa,EAAGG,CAAC,EAAIC,EAAK,MAAMJ,CAAa,CAC1E,EAKAR,EAAA,cAAC,QAAK,qBAAoBQ,CAAA,EACrBG,EAAIO,EAASH,EAAaJ,CAAC,EAAII,CACpC,CAAA,EAEL,CAACH,EAAKD,CAAC,CAAC,CACf,CAOA,SAASO,EAASC,EAAMC,EAAM,CAE1B,GAAIA,IAAS,OAAkB,OAAAD,EAE/B,MAAME,EAAO,MAAM,QAAQD,CAAI,EAAIA,EAAO,CAACA,CAAI,EAE/C,IAAIE,EAAU,EAEP,OADgBH,EAAK,QAAQ,MAAO,IAAME,EAAKC,GAAS,CAAC,CAYpE"}